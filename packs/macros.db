{"name":"Refill Material Troves","type":"script","scope":"global","author":"1nIvj2kghHEjRn0P","img":"icons/skills/trades/mining-pickaxe-stone-cart.webp","command":"if (!token) {\n    ui.notifications.warn(\"Please select a token!\");\n    return;\n}\n\nconst troves = game.pf2eHeroicCrafting.getTroves(token.actor);\n\nconst troveHTML = troves.map(trove => {\n    const cost = game.pf2e.Coins.fromPrice(trove.system.price, trove.system.quantity);\n\n    return `\n        <div class=\"form-group trove-div\" data-item-id=\"${trove.id}\">\n            <span>${trove.name}</span>\n            <select autofocus class=\"troveLevel\">${[...Array(token.actor.level).keys()].map(level => {\n                level++;\n                const selected = trove.level === level ? `selected=\"selected\"` : ``;\n                return '<option value=\"'.concat(level, '\" ', selected, '>', level, '</option>');\n            })}</select>\n            <input type=\"text\" value=\"${cost}\" class=\"materials\" style='margin-right: 20px; margin-left: 20px'>\n            <strong class=\"bulk\" data-item-quantity=\"${trove.quantity}\">${trove.bulk}</strong>\n            <strong class=\"leftovers\">${trove.flags[\"pf2e-heroic-crafting\"]?.leftovers || \"0 gp\"}</strong>\n        </div>\n    `\n});\n\nfunction updateRow(troveDiv) {\n    const materials = game.pf2e.Coins.fromString(troveDiv.children(\".materials\")[0].value);\n    const newTroveValue = game.pf2eHeroicCrafting.changeTroveValue(troveDiv.children(\".troveLevel\")[0].value, materials);\n\n    const formattedBulk = {\n        normal: Math.floor(newTroveValue.quantity / 10),\n        light: newTroveValue.quantity - (Math.floor(newTroveValue.quantity / 10) * 10)\n    };\n    let bulkHTML = \"\";\n\n    if (formattedBulk.normal > 0) {\n        bulkHTML += `${formattedBulk.normal}`;\n    }\n    if (formattedBulk.light > 0) {\n        bulkHTML += formattedBulk.normal > 0 ? `; ${formattedBulk.light}L` : `${formattedBulk.light}L`;\n    }\n    if (formattedBulk.normal === 0 && formattedBulk.light === 0) {\n        bulkHTML = \"-\";\n    }\n\n    troveDiv.children(\".bulk\").html(bulkHTML);\n    troveDiv.children(\".bulk\").attr(\"data-item-quantity\", newTroveValue.quantity);\n    troveDiv.children(\".leftovers\").html(newTroveValue.leftovers.toString());\n}\n\nconst dialogResults = await Dialog.wait({\n    title: \"Refill Material Troves\",\n    content: `\n            <form>\n                <body>\n                    <section>\n                        <h1>Refill Material Troves</h1>\n                    </section>\n                    <section>\n                        <p>Adjust the values of your Material Troves to fill them up. Their Bulk should change as you do so.</p>\n                        <p>You can adjust the level of your Material Troves up to your level. Higher level Material Troves contain more value in the same Bulk.</p> \n                        <p><strong>You must manually adjust any changes in your coins.</strong></p>\n                    </section>\n                </body>\n                <hr/>\n                <div class=\"form-group\">\n                    <strong>Name</strong>\n                    <strong>Level</strong>\n                    <strong style='margin-right: 20px; margin-left: 20px'>Value</strong>\n                    <strong>Bulk</strong>\n                    <strong>Leftover</strong>\n                </div>\n                <hr/>\n                ${troveHTML.join(\"\")}\n                <hr/>\n                <body>\n                    <section>\n                        <p><strong>Note:</strong> The Leftover column indicates value that cannot be represented with Bulk changes, but is still part of the Material Trove. As an example, if you Forage Crafting Resources for 1 day in a level 0 location, you would add 1 sp to your Material Trove -- but no Material Trove can actually represent that with a change in Bulk. This will still be accounted for, but will not show on the item.</p>\n                    </section>\n                </body>\n                <br/>\n            </form>\n        `,\n    buttons: {\n        refill: {\n            label: \"Refill\",\n            icon: \"<i class='fa-solid fa-toolbox'></i>\",\n            callback: (html) => {\n                let updates = [];\n\n                $(html).find(\".trove-div\").each(function () {\n                    const level = Number($(this).find(\".troveLevel\")[0].value) || 0;\n\n                    updates.push({\n                        _id: $(this).attr(\"data-item-id\"),\n                        \"system.level.value\": level,\n                        \"system.price.value\": game.pf2eHeroicCrafting.spendingLimit(\"hour\", level),\n                        \"system.quantity\": Number($(this).find(\".bulk\").attr(\"data-item-quantity\")) || 0,\n                        \"flags.pf2e-heroic-crafting.leftovers\": $(this).find(\".leftovers\").html()\n                    });\n                });\n\n                return updates;\n            }\n        },\n        cancel: {\n            label: \"Cancel\",\n            icon: \"<i class='fa-solid fa-ban'></i>\",\n        }\n    },\n    default: \"cancel\",\n    render: ([content]) => {\n        const materialInputs = content\n            .querySelectorAll(\".trove-div\");\n\n        for (let i = 0; i < materialInputs.length; i++) {\n            materialInputs[i].querySelector(\".troveLevel\").addEventListener(\"change\", (event) => {\n                updateRow($(event.target).parent());\n            });\n\n            materialInputs[i].querySelector(\".materials\").addEventListener(\"keyup\", (event) => {\n                updateRow($(event.target).parent());\n            });\n        };\n    }\n}, { width: 600 });\n\nif (dialogResults !== \"cancel\") {\n    await token.actor.updateEmbeddedDocuments(\"Item\", dialogResults);\n}","ownership":{"default":0,"1nIvj2kghHEjRn0P":3},"flags":{"core":{"sourceId":"Macro.jrY2hhy4bMonPOZi"}},"_stats":{"systemId":"pf2e","systemVersion":"4.7.4","coreVersion":"10.291","createdTime":1676742042346,"modifiedTime":1676834371801,"lastModifiedBy":"1nIvj2kghHEjRn0P"},"folder":null,"sort":0,"_id":"HMpC7FAjshFyGOlQ"}
